/**
 * 
 */
package tools;

import java.awt.Point;
import java.awt.Shape;
import java.awt.geom.Line2D;
import java.awt.geom.Path2D;
import java.util.ArrayList;
import java.util.List;

/**
 * @author miclo
 *
 */
public class PencilTool extends AbstractTool
{
    private final List<Point> endPoints;

    private Point myStartPoint;
    
    private Point myEndPoint;

    /**
     * 
     */
    public PencilTool()
    {
        super();
        endPoints = new ArrayList<>();
    }
    
    @Override
    public void setStartPoint(Point theStartPoint)
    {
        endPoints.clear();
        myStartPoint = (Point)theStartPoint.clone();
        myEndPoint = (Point)theStartPoint.clone();
        
    } 
    
    @Override
    public void setEndPoint(Point theEndPoint)
    {
        myEndPoint = (Point)theEndPoint.clone();
    }
    
    @Override
    public Point getStartPoint()
    {
        return myStartPoint;
    }
    
    @Override
    public Point getEndPoint()
    {
        return myEndPoint;
    }
    /* (non-Javadoc)
     * @see tools.Tool#getShape()
     */
    @Override
    public Shape getShape()
    {
        Path2D pencilShape = new Path2D.Double();
        pencilShape.moveTo(getStartPoint().getX(), getStartPoint().getY());
        endPoints.add(getEndPoint());
        for(int i = 0; i < endPoints.size(); i++)
        {
            pencilShape.lineTo(endPoints.get(i).getX(),  endPoints.get(i).getY());
        }
        
        
        return pencilShape;
    }

}
