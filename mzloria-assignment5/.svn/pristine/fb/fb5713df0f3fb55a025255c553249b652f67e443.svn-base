/**
 * 
 */
package gui;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.Action;
import javax.swing.ButtonGroup;
import javax.swing.JColorChooser;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JRadioButtonMenuItem;
import javax.swing.JSlider;
import javax.swing.SwingConstants;

/**
 * The JMenuBar for the Paint program.
 * 
 * @author Michael Zachary Loria
 * @version November 16 2018
 */
public class GUIMenuBar extends JMenuBar
{

    /** A generated serialization ID. */
    private static final long serialVersionUID = -4010954639105678332L;
    
    /** The amount between major tick spacing in the slider. */
    private static final int MY_TICK_SPACING = 5;
    
    /** The default color for the GUI program. */
    private static final Color MY_DEFAULT_COLOR = new Color(51, 0, 111);
    
    /** A button group for the buttons for the tools. */ 
    private final ButtonGroup myGroup;
    
    /** The JMenu for the tools. */
    private final JMenu myTools;
    
    /** The currently selected color. */
    private Color myColor;
    
    /**
     * Constructs the menu bar for the GUI program.
     */
    public GUIMenuBar()
    {
        myGroup = new ButtonGroup();
        myTools = new JMenu("Tools");
        myColor = MY_DEFAULT_COLOR;
        setUpMenuBar();        
    }
    
    /**
     * Sets up the JMenuBar with all of the proper 
     * components.
     */
    private void setUpMenuBar()
    {
        final JMenu options = new JMenu("Options");
        final JMenu thickness = new JMenu("Thickness");
        final JSlider slider = new JSlider(SwingConstants.HORIZONTAL, 0, 15, 2);
        slider.setMajorTickSpacing(MY_TICK_SPACING);
        slider.setMinorTickSpacing(1);
        slider.setPaintLabels(true);
        slider.setPaintTicks(true);
        thickness.add(slider);
        options.add(thickness);
        options.addSeparator();
        JMenuItem color = new JMenuItem("Color...");
        color.addActionListener(new ActionListener()
                                {
            public void actionPerformed(final ActionEvent theEvent)
            {
                //I AM NOT SURE WHAT THE FIRST ARGUMENT SHOULD BE?
                // null, color, or the JFrame (if jframe you need to pass it as a argument
                // in the constructor here)
                myColor = JColorChooser.showDialog(null, "Color Chooser", MY_DEFAULT_COLOR);
            }
        });
                                
        options.add(color);
        options.addSeparator();
        options.add(new JMenuItem("Clear"));
        add(options);
       
        add(myTools);
        
        final JMenu help = new JMenu("Help");
        help.add(new JMenuItem("About..."));
        add(help);
    }
    
    /**
     * Creates a radio button menu item with each respective action,
     * and adds them to the tool menu and the button group.
     * 
     * @param theAction The action associated with each respective JRadioButtonMenuItem.
     */
    protected void createButton(final Action theAction) 
    {
        final JRadioButtonMenuItem radioButtonMenuItem = new JRadioButtonMenuItem(theAction);
        myGroup.add(radioButtonMenuItem);
        myTools.add(radioButtonMenuItem);
    }
    
    /**
     * Returns to currently selected color.
     * 
     * @return The currently selected color.
     */
    protected Color getColor()
    {
        return myColor;
    }
}
