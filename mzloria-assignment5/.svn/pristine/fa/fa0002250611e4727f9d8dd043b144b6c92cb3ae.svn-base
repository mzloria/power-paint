/**
 * 
 */
package gui;

import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Point;
import java.awt.RenderingHints;
import java.awt.Shape;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseMotionAdapter;
import java.awt.geom.Line2D;
import java.util.ArrayList;
import java.util.List;

import javax.swing.JPanel;

/**
 * @author miclo
 *
 */
public class DrawingPanel extends JPanel
{
    /**
     * 
     */
    private static final long serialVersionUID = 2834178596939362883L;
    Point startingPoint = null;
    Point endingPoint = null;
    List<Shape> myShapes;
    
    public DrawingPanel()
    {
        myShapes = new ArrayList<>();
    }
    @Override
    public void paintComponent(final Graphics theGraphics)
    {
        super.paintComponent(theGraphics);
        final Graphics2D g2d = (Graphics2D) theGraphics;
        
        g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING,
                             RenderingHints.VALUE_ANTIALIAS_ON);
        g2d.setStroke(new BasicStroke(2));
        g2d.setPaint(new Color(51,0,111));
        setBackground(Color.WHITE);
        addMouseListener(new DrawMouseAdapter());
        addMouseMotionListener(new DrawMouseMotionAdapter());

        if(startingPoint != null && endingPoint != null)
        {
            g2d.draw(new Line2D.Double(startingPoint.x, startingPoint.y, endingPoint.x, endingPoint.y));
        }
        for(int i = 0; i < myShapes.size(); i++)
        {
            g2d.draw(myShapes.get(i));
        }
    }
    
    private final class DrawMouseAdapter extends MouseAdapter
    {

        public void mousePressed(final MouseEvent theEvent)
        {
            startingPoint = theEvent.getPoint();
        }
        
        public void mouseReleased(final MouseEvent theEvent)
        {
            endingPoint = theEvent.getPoint();
            if(startingPoint != null && endingPoint != null)
            {
            myShapes.add(new Line2D.Double(startingPoint.x, startingPoint.y, endingPoint.x, endingPoint.y));
            startingPoint = null;
            endingPoint = null;
            }

            
        }
    }
    
    private final class DrawMouseMotionAdapter extends MouseMotionAdapter
    {
        public void mouseDragged(MouseEvent e)
        {
            endingPoint = e.getPoint();
            repaint();
        }
    }
}
